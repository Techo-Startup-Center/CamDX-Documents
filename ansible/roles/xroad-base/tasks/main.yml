---
- name: configure ssh password authentication
  replace:
    path: /etc/ssh/sshd_config
    regexp: '^PasswordAuthentication\s+(.*)$'
    replace: "PasswordAuthentication {{ ssh_password_authentication | ternary('yes', 'no') }}"
    validate: /usr/sbin/sshd -T -f %s
  notify: restart ssh
  when: ssh_password_authentication is defined

- name: xroad group
  group:
    name: xroad
    system: true

- name: xroad user
  user:
    name: xroad
    comment: "X-Road system user"
    state: present
    shell: "/bin/bash"
    group: "xroad"
    system: true
    password: '*'
    createhome: "yes"

- name: xroad ui user
  user:
    name: "{{ xroad_ui_user }}"
    comment: "X-Road admin user"
    state: present
    shell: "/usr/sbin/nologin"
    password: "{{ xroad_ui_user_password }}"
    createhome: "no"

- include_tasks: ubuntu.yml
  when: ansible_os_family == "Debian"

- include_tasks: rhel.yml
  when: ansible_os_family == "RedHat"

- name: clean xroad logs at boot
  cron:
    name: xroad log cleanup
    job: "/usr/bin/find /var/log/xroad -type f -not -name audit.log \\( -name '*.log' -o -name '*.log.zip' \\) -mtime +7 -exec rm {{ '{} \\;' }} > /dev/null 2>&1"
    special_time: reboot
    cron_file: xroad_log_cleanup
    user: xroad
    state: present
  tags:
    - cron

- name: clean package manager caches at boot (Debian/Ubuntu)
  cron:
    name: clean package cache
    job: "apt-get clean && apt-get -y autoremove > /dev/null 2>&1"
    special_time: reboot
    cron_file: package_cache_cleanup
    user: root
    state: present
  when: ansible_os_family == "Debian"
  tags:
    - cron

- name: clean package manager caches at boot (RHEL)
  cron:
    name: clean package cache
    job: "yum clean packages > /dev/null 2>&1"
    special_time: reboot
    cron_file: package_cache_cleanup
    user: root
    state: present
  when: ansible_os_family == "RedHat"
  tags:
    - cron
